<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.daggerok.wipe4j</groupId>
  <artifactId>wipe4j</artifactId>
  <version>0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>
  <description>JVM local filesystem projects cleaner analyzer - wipe4j</description>
  <url>https://github.com/daggerok/wipe4j</url>
  <developers>
    <developer>
      <name>Maksim Kostromin</name>
      <email>daggerok@gmail.com</email>
      <organization>Sets of open source Maksim Kostromin aka daggerok projects</organization>
      <organizationUrl>https://github.com/daggerok</organizationUrl>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://github.com/daggerok/wipe4j/blob/master/LICENSE</url>
    </license>
  </licenses>
  <scm>
    <developerConnection>scm:git:git@github.com:daggerok/wipe4j.git</developerConnection>
    <connection>scm:git:https://github.com/daggerok/wipe4j.git</connection>
    <url>https://github.com/daggerok/wipe4j</url>
    <!-- <tag>master</tag> -->
    <tag>HEAD</tag>
  </scm>
  <modules>
    <module>docs</module>
    <module>wipe4j-core</module>
    <module>wipe4j-cli</module>
    <module>wipe4j-maven-plugin</module>
  </modules>
  <properties>
    <encoding>UTF-8</encoding>
    <java.version>11</java.version>
    <vavr.version>0.10.3</vavr.version>
    <picocli.version>4.6.1</picocli.version>
    <spring-boot.version>2.4.4</spring-boot.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <frontend-maven-plugin.version>1.11.3</frontend-maven-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <maven-scm-publish-plugin.version>3.1.0</maven-scm-publish-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.daggerok.wipe4j</groupId>
        <artifactId>wipe4j-core</artifactId>
        <version>${project.version}</version>
        <type>jar</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
        <type>jar</type>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
        <type>jar</type>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli-spring-boot-starter</artifactId>
        <version>${picocli.version}</version>
        <type>jar</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>clean package</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <executable>true</executable>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>build-info</goal>
                <goal>repackage</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>${encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <encoding>${encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>local-deploy</id>
      <build><!-- ./mvnw -P local-deploy -->
        <defaultGoal>clean deploy</defaultGoal>
      </build>
      <distributionManagement>
        <repository>
          <id>local-maven-repo</id>
          <url>file://${maven.multiModuleProjectDirectory}/target/.m2/repository</url>
        </repository>
      </distributionManagement>
    </profile>
    <profile>
      <id>github-deploy</id>
      <build>
        <!--
        at first time:
        1) cp .mvn/settings.template.xml .mvn/settings.xml and update it accordingly
        2) on github project repo create maven branch to be used for publishing artifacts
        ./mvnw -P local-deploy ; ./mvnw -P github-deploy -s .mvn/settings.xml -pl :wipe4j-cli
        -->
        <defaultGoal>scm-publish:publish-scm</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-publish-plugin</artifactId>
            <version>${maven-scm-publish-plugin.version}</version>
            <configuration>
              <content>${maven.multiModuleProjectDirectory}/target/.m2/repository/</content>
              <!--<includes>**/*.*</includes>-->
              <skipDeletedFiles>true</skipDeletedFiles>
              <scmBranch>maven</scmBranch>
              <tryUpdate>true</tryUpdate>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <site>
          <id>daggerok-github</id>
          <url>${project.scm.developerConnection}</url>
        </site>
      </distributionManagement>
    </profile>
  </profiles>
</project>
